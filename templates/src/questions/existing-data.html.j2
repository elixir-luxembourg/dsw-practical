<div id="existing-data" class="question">
 
  <div class="answer">

  

    {%- set preexistingPath = [uuids.reusingCUuid, uuids.preexistingQUuid]|reply_path -%}
    {%- set preexistingAUuid = repliesMap[preexistingPath]|reply_str_value -%}
    {%- if preexistingAUuid == uuids.preexistingYesAUuid -%}
      <h3>how  will existing data be re-used? </h3>
      <h4> Reused Dataset</h4>
      {%- set usingPreexistingPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.usingPreexistingQUuid]|reply_path -%}
      {%- set usingPreexistingAUuid = repliesMap[usingPreexistingPath]|reply_str_value -%}
      {%- if usingPreexistingAUuid == uuids.usingPreexistingYesAUuid -%}
        {%- set refDataPath = [usingPreexistingPath, uuids.usingPreexistingYesAUuid, uuids.refDataQUuid]|reply_path -%}
        {%- set refDataItems = repliesMap[refDataPath]|reply_items -%}
        {%- set nrefDataPath = [usingPreexistingPath, uuids.usingPreexistingYesAUuid, uuids.nrefDataQUuid]|reply_path -%}
        {%- set nrefDataItems = repliesMap[nrefDataPath]|reply_items -%}



        {%- if (refDataItems|length + nrefDataItems|length) > 0 -%}
          <div>
            
            {%- if refDataItems|length > 0 -%}
              <ul>
              <h5> We will use the following reference datasets: </h5>
              
                {%- for refDataItem in refDataItems -%}
                  {%- set refDataPrefix = [refDataPath, refDataItem]|reply_path -%}
                  {%- set refDataNameReply = repliesMap[[refDataPrefix, uuids.refDataNameQUuid]|reply_path] -%}
                  {%- set refDataWhere = repliesMap[[refDataPrefix, uuids.refDataWhereQUuid]|reply_path]|reply_str_value -%}
                  


                  <li>
                    {# identification #}
                    <strong>{{ macros.integrationValue(refDataNameReply, uuids.refDataNameQUuid) }}</strong>
                    {%- if refDataWhere -%}
                      {%- if refDataWhere.startswith("http://") or refDataWhere.startswith("https://") or refDataWhere.startswith("ftp://") %}
                        (<a href="{{ refDataWhere }}" target="_blank">{{ refDataWhere }}</a>)
                      {%- else %}
                        ({{ refDataWhere }})
                      {%- endif -%}
                    {%- endif -%}
                    {# version #}
                    {%- set refDataVersionedPath = [refDataPrefix, uuids.refDataVersionedQUuid]|reply_path -%}
                    {%- set refDataVersionedAUuid = repliesMap[refDataVersionedPath]|reply_str_value -%}
                    {%- if refDataVersionedAUuid == uuids.refDataVersionedYesAUuid -%}
                      {%- set refDataVersionedWhichPath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedWhichQUuid]|reply_path -%}
                      {%- set refDataVersionedWhich = repliesMap[refDataVersionedWhichPath]|reply_str_value -%}
                      {%- set refDataVersionedChangePath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedChangeQUuid]|reply_path -%}
                      {%- set refDataVersionedChangeAUuid = repliesMap[refDataVersionedChangePath]|reply_str_value -%}
                      {%- if refDataVersionedWhich or refDataVersionedChangeAUuid  %}
                        <p>
                        {% if refDataVersionedWhich -%}
                          We will use version "{{ refDataVersionedWhich }}" of this dataset.
                        {%- endif -%}
                        {%- if refDataVersionedChangeAUuid == uuids.refDataVersionedChangeStayAUuid %}
                          If a new version becomes available during the project, we will stay with the old version.
                        {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeNewAUuid %}
                          If a new version becomes available during the project, new analyses will be done with the new version.
                        {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeAllAUuid %}
                          If a new version becomes available during the project, all analyses will be redone with the new version.
                        {%- endif -%}
                        </p>
                      {%- endif -%}
                    {%- endif -%}

                    {# condition #}
                    {%- set refDataConditionsPath = [refDataPrefix, uuids.refDataConditionsQUuid]|reply_path -%}
                    {%- set refDataConditionsAUuid = repliesMap[refDataConditionsPath]|reply_str_value -%}
                    {% if refDataConditionsAUuid == uuids.refDataConditionsCC0AUuid -%}
                      freely available for any use (public domain or CC0).
                    {%- elif refDataConditionsAUuid == uuids.refDataConditionsCCBYAUuid -%}
                      freely available with obligation to quote the source (e.g. CC-BY).
                    {%- elif refDataConditionsAUuid == uuids.refDataConditionsOtherAUuid -%}
                      {%- set refDataConditionsOtherPath = [refDataConditionsPath, uuids.refDataConditionsOtherAUuid, uuids.refDataConditionsOtherQUuid]|reply_path -%}
                      {%- set refDataConditionsOther = repliesMap[refDataConditionsOtherPath]|reply_str_value -%}
                      available under specific restrictions, which we will follow in our project{{ ": " ~ refDataConditionsOther|dot if refDataConditionsOther else "." }}
                    {%- endif -%}



                  </li>
                {%- endfor -%}
              </ul>
              
            {%- endif -%}
            {%- if nrefDataItems|length > 0 -%}
              <div>We will use the following already existing non-reference datasets:
              <ul>
                {%- for nrefDataItem in nrefDataItems -%}
                  {%- set nrefDataNamePath = [nrefDataPath, nrefDataItem, uuids.nrefDataNameQUuid]|reply_path -%}
                  {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
                  {%- set nrefDataWhere = repliesMap[[nrefDataPrefix, uuids.nrefDataWhereQUuid]|reply_path]|reply_str_value -%}
                  <li>
                    {# identification #}
                    <strong>{{ macros.integrationValue(nrefDataNameReply, uuids.nrefDataNameQUuid) }}</strong>
                    {%- if nrefDataWhere -%}
                      {%- if nrefDataWhere.startswith("http://") or nrefDataWhere.startswith("https://") or nrefDataWhere.startswith("ftp://") %}
                        (<a href="{{ nrefDataWhere }}" target="_blank">{{ nrefDataWhere }}</a>)
                      {%- else %}
                        ({{ nrefDataWhere }})
                      {%- endif -%}
                    {%- endif -%}
                    
                    
                      
                  </li>
                {%- endfor -%}
              </ul>
              </div>
            {%- endif -%}



            




            
          </div>





        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    

          

  </div>
</div>